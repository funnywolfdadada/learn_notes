char型变量向上转化会转化成int型
this(...)调用构造方法，但不能调用两个，并且对this的调用必须是构造器中的第一个语句
Java中：1、对象可能不被垃圾回收；2、垃圾回收不等于“析构”；3、垃圾回收只与内存有关
finalize()的作用是之前调用了native方法来分配内存，对象被垃圾回收时，需要在finalize方法中释放掉
Java初始化顺序：
	->父类静态代码块或变量（按定义顺序）
	->子类静态代码块或变量
	->父类成员变量或代码块->构造函数
	->子类成员变量或代码块->构造函数
String[] s = new String[10]; 只是创建了一个拥有10个String引用的数组s，它里面的内容都是null
Java访问权限从大到小依次是：public、protected、包访问权限（没有关键字）和private
外部类的访问权限不能是protected或private，内部类可以
命令"java ClassName"就可以调用ClassName类的main方法，即使这个类不是public的
Java子类中重载基类中的方法并不会屏蔽基类中的任何版本
@Override注解可以防止在复写时意外地进行了重载
Java中除了static方法和final方法（private方法属于final方法）外，其他所有方法都支持后期绑定
	final方法禁止Override，static方法和数据成员（域，field）在编译时进行解析 (8.2.5, P157)
	构造方法中调用普通函数也可以多态，但是数据成员可能未完全初始化，构造器中唯一能安全调用
	的方法是基类的final方法 (8.3.3, P163)
								
